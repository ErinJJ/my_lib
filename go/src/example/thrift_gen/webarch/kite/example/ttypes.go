// Autogenerated by Thrift Compiler (0.9.2)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package example

import (
	"bytes"
	"example/thrift_gen/base"
	"fmt"

	"code.byted.org/gopkg/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var _ = base.GoUnusedProtection__
var GoUnusedProtection__ int

type ExampleReq struct {
	Msg string `thrift:"Msg,1,required" json:"Msg"`
	// unused fields # 2 to 254
	Base *base.Base `thrift:"Base,255" json:"Base"`
}

func NewExampleReq() *ExampleReq {
	return &ExampleReq{}
}

func (p *ExampleReq) GetMsg() string {
	return p.Msg
}

var ExampleReq_Base_DEFAULT *base.Base

func (p *ExampleReq) GetBase() *base.Base {
	if !p.IsSetBase() {
		return ExampleReq_Base_DEFAULT
	}
	return p.Base
}
func (p *ExampleReq) IsSetBase() bool {
	return p.Base != nil
}

func (p *ExampleReq) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}

	var issetMsg bool
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
			issetMsg = true
		case 255:
			if err := p.ReadField255(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}

	if !issetMsg {
		return fmt.Errorf("Required field Msg is not set")
	}
	return nil
}

func (p *ExampleReq) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Msg = v
	}
	return nil
}

func (p *ExampleReq) ReadField255(iprot thrift.TProtocol) error {
	p.Base = &base.Base{}
	if err := p.Base.Read(iprot); err != nil {
		return fmt.Errorf("%T error reading struct: %s", p.Base, err)
	}
	return nil
}

func (p *ExampleReq) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("ExampleReq"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField255(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *ExampleReq) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Msg", thrift.STRING, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:Msg: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Msg)); err != nil {
		return fmt.Errorf("%T.Msg (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:Msg: %s", p, err)
	}
	return err
}

func (p *ExampleReq) writeField255(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Base", thrift.STRUCT, 255); err != nil {
		return fmt.Errorf("%T write field begin error 255:Base: %s", p, err)
	}
	if err := p.Base.Write(oprot); err != nil {
		return fmt.Errorf("%T error writing struct: %s", p.Base, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 255:Base: %s", p, err)
	}
	return err
}

func (p *ExampleReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleReq(%+v)", *p)
}

type ExampleResp struct {
	Msg string `thrift:"Msg,1,required" json:"Msg"`
	// unused fields # 2 to 254
	BaseResp *base.BaseResp `thrift:"BaseResp,255" json:"BaseResp"`
}

func NewExampleResp() *ExampleResp {
	return &ExampleResp{}
}

func (p *ExampleResp) GetMsg() string {
	return p.Msg
}

var ExampleResp_BaseResp_DEFAULT *base.BaseResp

func (p *ExampleResp) GetBaseResp() *base.BaseResp {
	if !p.IsSetBaseResp() {
		return ExampleResp_BaseResp_DEFAULT
	}
	return p.BaseResp
}
func (p *ExampleResp) IsSetBaseResp() bool {
	return p.BaseResp != nil
}

func (p *ExampleResp) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}

	var issetMsg bool
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
			issetMsg = true
		case 255:
			if err := p.ReadField255(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}

	if !issetMsg {
		return fmt.Errorf("Required field Msg is not set")
	}
	return nil
}

func (p *ExampleResp) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Msg = v
	}
	return nil
}

func (p *ExampleResp) ReadField255(iprot thrift.TProtocol) error {
	p.BaseResp = &base.BaseResp{}
	if err := p.BaseResp.Read(iprot); err != nil {
		return fmt.Errorf("%T error reading struct: %s", p.BaseResp, err)
	}
	return nil
}

func (p *ExampleResp) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("ExampleResp"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField255(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *ExampleResp) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Msg", thrift.STRING, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:Msg: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Msg)); err != nil {
		return fmt.Errorf("%T.Msg (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:Msg: %s", p, err)
	}
	return err
}

func (p *ExampleResp) writeField255(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("BaseResp", thrift.STRUCT, 255); err != nil {
		return fmt.Errorf("%T write field begin error 255:BaseResp: %s", p, err)
	}
	if err := p.BaseResp.Write(oprot); err != nil {
		return fmt.Errorf("%T error writing struct: %s", p.BaseResp, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 255:BaseResp: %s", p, err)
	}
	return err
}

func (p *ExampleResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ExampleResp(%+v)", *p)
}
